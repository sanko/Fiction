---
jobs:
  affected-apps:
    name: A job to say hello
    outputs:
      apps: '${{ steps.step1.outputs.test}}'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: step1
        run: "echo 'test=[\"app1\",\"app2\", \"app3\"]' >> \"$GITHUB_OUTPUT\""
  example_matrix:
    needs: affected-apps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
      - run: 'echo "${{ matrix.app }}"'
    strategy:
      matrix:
        app: '${{ fromJson(needs.affected-apps.outputs.apps) }}'
  filter_matrix:
    needs: affected-apps
    outputs:
      apps: '${{ steps.step1.outputs.filtered }}'
    runs-on: ubuntu-latest
    steps:
      - env:
          APPS: '${{ needs.affected-apps.outputs.apps }}'
        id: step1
        run: |
          echo "$APPS"
          RESULT=$(echo $APPS | jq -c --argjson toRemove '["app1", "app2"]' 'map(select(. as $v | $toRemove | index($v) | not))')
          echo "$RESULT"
          echo "filtered=$RESULT" >> "$GITHUB_OUTPUT"
  filtered_matrix:
    needs: filter_matrix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
      - run: 'echo "${{ matrix.app }}"'
    strategy:
      matrix:
        app: '${{ fromJson(needs.filter_matrix.outputs.apps) }}'
name: CI
on:
  pull_request:
    branches: '*'
  push:
    branches: '*'
  schedule:
    - cron: 42 5 * * 0
